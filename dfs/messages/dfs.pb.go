// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.14.0
// source: proto/dfs.proto

package messages

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// ------------ Controller messages ------------
type JoinRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Accept bool   `protobuf:"varint,1,opt,name=accept,proto3" json:"accept,omitempty"`
	NodeId string `protobuf:"bytes,2,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
}

func (x *JoinRes) Reset() {
	*x = JoinRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dfs_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JoinRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinRes) ProtoMessage() {}

func (x *JoinRes) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dfs_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinRes.ProtoReflect.Descriptor instead.
func (*JoinRes) Descriptor() ([]byte, []int) {
	return file_proto_dfs_proto_rawDescGZIP(), []int{0}
}

func (x *JoinRes) GetAccept() bool {
	if x != nil {
		return x.Accept
	}
	return false
}

func (x *JoinRes) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

type KillNode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Kill bool `protobuf:"varint,1,opt,name=kill,proto3" json:"kill,omitempty"`
}

func (x *KillNode) Reset() {
	*x = KillNode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dfs_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KillNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KillNode) ProtoMessage() {}

func (x *KillNode) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dfs_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KillNode.ProtoReflect.Descriptor instead.
func (*KillNode) Descriptor() ([]byte, []int) {
	return file_proto_dfs_proto_rawDescGZIP(), []int{1}
}

func (x *KillNode) GetKill() bool {
	if x != nil {
		return x.Kill
	}
	return false
}

type NodeList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nodes []string `protobuf:"bytes,1,rep,name=nodes,proto3" json:"nodes,omitempty"`
}

func (x *NodeList) Reset() {
	*x = NodeList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dfs_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeList) ProtoMessage() {}

func (x *NodeList) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dfs_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeList.ProtoReflect.Descriptor instead.
func (*NodeList) Descriptor() ([]byte, []int) {
	return file_proto_dfs_proto_rawDescGZIP(), []int{2}
}

func (x *NodeList) GetNodes() []string {
	if x != nil {
		return x.Nodes
	}
	return nil
}

type CStorageRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ok           bool                 `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	Message      string               `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Nodes        []string             `protobuf:"bytes,3,rep,name=nodes,proto3" json:"nodes,omitempty"`
	ChunkMap     map[string]string    `protobuf:"bytes,4,rep,name=chunk_map,json=chunkMap,proto3" json:"chunk_map,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	ReplicaNodes map[string]*NodeList `protobuf:"bytes,5,rep,name=replica_nodes,json=replicaNodes,proto3" json:"replica_nodes,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *CStorageRes) Reset() {
	*x = CStorageRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dfs_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CStorageRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CStorageRes) ProtoMessage() {}

func (x *CStorageRes) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dfs_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CStorageRes.ProtoReflect.Descriptor instead.
func (*CStorageRes) Descriptor() ([]byte, []int) {
	return file_proto_dfs_proto_rawDescGZIP(), []int{3}
}

func (x *CStorageRes) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

func (x *CStorageRes) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CStorageRes) GetNodes() []string {
	if x != nil {
		return x.Nodes
	}
	return nil
}

func (x *CStorageRes) GetChunkMap() map[string]string {
	if x != nil {
		return x.ChunkMap
	}
	return nil
}

func (x *CStorageRes) GetReplicaNodes() map[string]*NodeList {
	if x != nil {
		return x.ReplicaNodes
	}
	return nil
}

type CRetrievalRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ok         bool                 `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	Message    string               `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	NumChunks  int64                `protobuf:"varint,3,opt,name=numChunks,proto3" json:"numChunks,omitempty"`
	NodeChunks map[string]*NodeList `protobuf:"bytes,4,rep,name=node_chunks,json=nodeChunks,proto3" json:"node_chunks,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *CRetrievalRes) Reset() {
	*x = CRetrievalRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dfs_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CRetrievalRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CRetrievalRes) ProtoMessage() {}

func (x *CRetrievalRes) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dfs_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CRetrievalRes.ProtoReflect.Descriptor instead.
func (*CRetrievalRes) Descriptor() ([]byte, []int) {
	return file_proto_dfs_proto_rawDescGZIP(), []int{4}
}

func (x *CRetrievalRes) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

func (x *CRetrievalRes) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CRetrievalRes) GetNumChunks() int64 {
	if x != nil {
		return x.NumChunks
	}
	return 0
}

func (x *CRetrievalRes) GetNodeChunks() map[string]*NodeList {
	if x != nil {
		return x.NodeChunks
	}
	return nil
}

type ReplicaOrder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filename     string   `protobuf:"bytes,1,opt,name=filename,proto3" json:"filename,omitempty"`
	Chunkname    string   `protobuf:"bytes,2,opt,name=chunkname,proto3" json:"chunkname,omitempty"`
	Chunksize    int64    `protobuf:"varint,3,opt,name=chunksize,proto3" json:"chunksize,omitempty"`
	ReplicaNodes []string `protobuf:"bytes,4,rep,name=replica_nodes,json=replicaNodes,proto3" json:"replica_nodes,omitempty"`
}

func (x *ReplicaOrder) Reset() {
	*x = ReplicaOrder{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dfs_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReplicaOrder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplicaOrder) ProtoMessage() {}

func (x *ReplicaOrder) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dfs_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplicaOrder.ProtoReflect.Descriptor instead.
func (*ReplicaOrder) Descriptor() ([]byte, []int) {
	return file_proto_dfs_proto_rawDescGZIP(), []int{5}
}

func (x *ReplicaOrder) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *ReplicaOrder) GetChunkname() string {
	if x != nil {
		return x.Chunkname
	}
	return ""
}

func (x *ReplicaOrder) GetChunksize() int64 {
	if x != nil {
		return x.Chunksize
	}
	return 0
}

func (x *ReplicaOrder) GetReplicaNodes() []string {
	if x != nil {
		return x.ReplicaNodes
	}
	return nil
}

type ReplicaRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ok       bool   `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	NodeId   string `protobuf:"bytes,2,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	NodeAddr string `protobuf:"bytes,3,opt,name=node_addr,json=nodeAddr,proto3" json:"node_addr,omitempty"`
}

func (x *ReplicaRes) Reset() {
	*x = ReplicaRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dfs_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReplicaRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplicaRes) ProtoMessage() {}

func (x *ReplicaRes) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dfs_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplicaRes.ProtoReflect.Descriptor instead.
func (*ReplicaRes) Descriptor() ([]byte, []int) {
	return file_proto_dfs_proto_rawDescGZIP(), []int{6}
}

func (x *ReplicaRes) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

func (x *ReplicaRes) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *ReplicaRes) GetNodeAddr() string {
	if x != nil {
		return x.NodeAddr
	}
	return ""
}

type ListRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filenames []string `protobuf:"bytes,1,rep,name=filenames,proto3" json:"filenames,omitempty"`
}

func (x *ListRes) Reset() {
	*x = ListRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dfs_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRes) ProtoMessage() {}

func (x *ListRes) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dfs_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRes.ProtoReflect.Descriptor instead.
func (*ListRes) Descriptor() ([]byte, []int) {
	return file_proto_dfs_proto_rawDescGZIP(), []int{7}
}

func (x *ListRes) GetFilenames() []string {
	if x != nil {
		return x.Filenames
	}
	return nil
}

type NodesRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DiskSpace uint64           `protobuf:"varint,1,opt,name=disk_space,json=diskSpace,proto3" json:"disk_space,omitempty"`
	NodeReqs  map[string]int64 `protobuf:"bytes,2,rep,name=node_reqs,json=nodeReqs,proto3" json:"node_reqs,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
}

func (x *NodesRes) Reset() {
	*x = NodesRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dfs_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodesRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodesRes) ProtoMessage() {}

func (x *NodesRes) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dfs_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodesRes.ProtoReflect.Descriptor instead.
func (*NodesRes) Descriptor() ([]byte, []int) {
	return file_proto_dfs_proto_rawDescGZIP(), []int{8}
}

func (x *NodesRes) GetDiskSpace() uint64 {
	if x != nil {
		return x.DiskSpace
	}
	return 0
}

func (x *NodesRes) GetNodeReqs() map[string]int64 {
	if x != nil {
		return x.NodeReqs
	}
	return nil
}

type DeleteRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ok      bool   `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *DeleteRes) Reset() {
	*x = DeleteRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dfs_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRes) ProtoMessage() {}

func (x *DeleteRes) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dfs_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRes.ProtoReflect.Descriptor instead.
func (*DeleteRes) Descriptor() ([]byte, []int) {
	return file_proto_dfs_proto_rawDescGZIP(), []int{9}
}

func (x *DeleteRes) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

func (x *DeleteRes) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// ------------ Node messages ------------
type JoinReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeAddr  string `protobuf:"bytes,1,opt,name=node_addr,json=nodeAddr,proto3" json:"node_addr,omitempty"`
	DiskSpace uint64 `protobuf:"varint,2,opt,name=disk_space,json=diskSpace,proto3" json:"disk_space,omitempty"`
}

func (x *JoinReq) Reset() {
	*x = JoinReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dfs_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JoinReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinReq) ProtoMessage() {}

func (x *JoinReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dfs_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinReq.ProtoReflect.Descriptor instead.
func (*JoinReq) Descriptor() ([]byte, []int) {
	return file_proto_dfs_proto_rawDescGZIP(), []int{10}
}

func (x *JoinReq) GetNodeAddr() string {
	if x != nil {
		return x.NodeAddr
	}
	return ""
}

func (x *JoinReq) GetDiskSpace() uint64 {
	if x != nil {
		return x.DiskSpace
	}
	return 0
}

type ChunkList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Chunks []string `protobuf:"bytes,1,rep,name=chunks,proto3" json:"chunks,omitempty"`
}

func (x *ChunkList) Reset() {
	*x = ChunkList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dfs_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChunkList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChunkList) ProtoMessage() {}

func (x *ChunkList) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dfs_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChunkList.ProtoReflect.Descriptor instead.
func (*ChunkList) Descriptor() ([]byte, []int) {
	return file_proto_dfs_proto_rawDescGZIP(), []int{11}
}

func (x *ChunkList) GetChunks() []string {
	if x != nil {
		return x.Chunks
	}
	return nil
}

type Heartbeat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeId    string                `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	DiskSpace uint64                `protobuf:"varint,2,opt,name=disk_space,json=diskSpace,proto3" json:"disk_space,omitempty"`
	Requests  int64                 `protobuf:"varint,3,opt,name=requests,proto3" json:"requests,omitempty"`
	NewChunks map[string]*ChunkList `protobuf:"bytes,4,rep,name=new_chunks,json=newChunks,proto3" json:"new_chunks,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *Heartbeat) Reset() {
	*x = Heartbeat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dfs_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Heartbeat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Heartbeat) ProtoMessage() {}

func (x *Heartbeat) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dfs_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Heartbeat.ProtoReflect.Descriptor instead.
func (*Heartbeat) Descriptor() ([]byte, []int) {
	return file_proto_dfs_proto_rawDescGZIP(), []int{12}
}

func (x *Heartbeat) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *Heartbeat) GetDiskSpace() uint64 {
	if x != nil {
		return x.DiskSpace
	}
	return 0
}

func (x *Heartbeat) GetRequests() int64 {
	if x != nil {
		return x.Requests
	}
	return 0
}

func (x *Heartbeat) GetNewChunks() map[string]*ChunkList {
	if x != nil {
		return x.NewChunks
	}
	return nil
}

type NStorageRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ok      bool   `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *NStorageRes) Reset() {
	*x = NStorageRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dfs_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NStorageRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NStorageRes) ProtoMessage() {}

func (x *NStorageRes) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dfs_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NStorageRes.ProtoReflect.Descriptor instead.
func (*NStorageRes) Descriptor() ([]byte, []int) {
	return file_proto_dfs_proto_rawDescGZIP(), []int{13}
}

func (x *NStorageRes) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

func (x *NStorageRes) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type NRetrievalRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ok        bool   `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	Message   string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	ChunkSize int64  `protobuf:"varint,3,opt,name=chunk_size,json=chunkSize,proto3" json:"chunk_size,omitempty"`
}

func (x *NRetrievalRes) Reset() {
	*x = NRetrievalRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dfs_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NRetrievalRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NRetrievalRes) ProtoMessage() {}

func (x *NRetrievalRes) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dfs_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NRetrievalRes.ProtoReflect.Descriptor instead.
func (*NRetrievalRes) Descriptor() ([]byte, []int) {
	return file_proto_dfs_proto_rawDescGZIP(), []int{14}
}

func (x *NRetrievalRes) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

func (x *NRetrievalRes) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *NRetrievalRes) GetChunkSize() int64 {
	if x != nil {
		return x.ChunkSize
	}
	return 0
}

type OrderRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ok      bool   `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *OrderRes) Reset() {
	*x = OrderRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dfs_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderRes) ProtoMessage() {}

func (x *OrderRes) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dfs_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderRes.ProtoReflect.Descriptor instead.
func (*OrderRes) Descriptor() ([]byte, []int) {
	return file_proto_dfs_proto_rawDescGZIP(), []int{15}
}

func (x *OrderRes) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

func (x *OrderRes) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ReplicaReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeId    string `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	Filename  string `protobuf:"bytes,2,opt,name=filename,proto3" json:"filename,omitempty"`
	Chunkname string `protobuf:"bytes,3,opt,name=chunkname,proto3" json:"chunkname,omitempty"`
}

func (x *ReplicaReq) Reset() {
	*x = ReplicaReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dfs_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReplicaReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplicaReq) ProtoMessage() {}

func (x *ReplicaReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dfs_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplicaReq.ProtoReflect.Descriptor instead.
func (*ReplicaReq) Descriptor() ([]byte, []int) {
	return file_proto_dfs_proto_rawDescGZIP(), []int{16}
}

func (x *ReplicaReq) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *ReplicaReq) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *ReplicaReq) GetChunkname() string {
	if x != nil {
		return x.Chunkname
	}
	return ""
}

// ------------ Client messages ------------
type CStorageReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filename   string           `protobuf:"bytes,1,opt,name=filename,proto3" json:"filename,omitempty"`
	Filesize   int64            `protobuf:"varint,2,opt,name=filesize,proto3" json:"filesize,omitempty"`
	ChunkSizes map[string]int64 `protobuf:"bytes,3,rep,name=chunk_sizes,json=chunkSizes,proto3" json:"chunk_sizes,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
}

func (x *CStorageReq) Reset() {
	*x = CStorageReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dfs_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CStorageReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CStorageReq) ProtoMessage() {}

func (x *CStorageReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dfs_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CStorageReq.ProtoReflect.Descriptor instead.
func (*CStorageReq) Descriptor() ([]byte, []int) {
	return file_proto_dfs_proto_rawDescGZIP(), []int{17}
}

func (x *CStorageReq) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *CStorageReq) GetFilesize() int64 {
	if x != nil {
		return x.Filesize
	}
	return 0
}

func (x *CStorageReq) GetChunkSizes() map[string]int64 {
	if x != nil {
		return x.ChunkSizes
	}
	return nil
}

type NStorageReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filename     string   `protobuf:"bytes,1,opt,name=filename,proto3" json:"filename,omitempty"`
	Chunkname    string   `protobuf:"bytes,2,opt,name=chunkname,proto3" json:"chunkname,omitempty"`
	Chunksize    int64    `protobuf:"varint,3,opt,name=chunksize,proto3" json:"chunksize,omitempty"`
	ReplicaNodes []string `protobuf:"bytes,4,rep,name=replica_nodes,json=replicaNodes,proto3" json:"replica_nodes,omitempty"`
}

func (x *NStorageReq) Reset() {
	*x = NStorageReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dfs_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NStorageReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NStorageReq) ProtoMessage() {}

func (x *NStorageReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dfs_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NStorageReq.ProtoReflect.Descriptor instead.
func (*NStorageReq) Descriptor() ([]byte, []int) {
	return file_proto_dfs_proto_rawDescGZIP(), []int{18}
}

func (x *NStorageReq) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *NStorageReq) GetChunkname() string {
	if x != nil {
		return x.Chunkname
	}
	return ""
}

func (x *NStorageReq) GetChunksize() int64 {
	if x != nil {
		return x.Chunksize
	}
	return 0
}

func (x *NStorageReq) GetReplicaNodes() []string {
	if x != nil {
		return x.ReplicaNodes
	}
	return nil
}

type CRetrievalReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filename string `protobuf:"bytes,1,opt,name=filename,proto3" json:"filename,omitempty"`
}

func (x *CRetrievalReq) Reset() {
	*x = CRetrievalReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dfs_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CRetrievalReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CRetrievalReq) ProtoMessage() {}

func (x *CRetrievalReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dfs_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CRetrievalReq.ProtoReflect.Descriptor instead.
func (*CRetrievalReq) Descriptor() ([]byte, []int) {
	return file_proto_dfs_proto_rawDescGZIP(), []int{19}
}

func (x *CRetrievalReq) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

type NRetrievalReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filename  string `protobuf:"bytes,1,opt,name=filename,proto3" json:"filename,omitempty"`
	Chunkname string `protobuf:"bytes,2,opt,name=chunkname,proto3" json:"chunkname,omitempty"`
	Checksum  bool   `protobuf:"varint,3,opt,name=checksum,proto3" json:"checksum,omitempty"`
}

func (x *NRetrievalReq) Reset() {
	*x = NRetrievalReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dfs_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NRetrievalReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NRetrievalReq) ProtoMessage() {}

func (x *NRetrievalReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dfs_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NRetrievalReq.ProtoReflect.Descriptor instead.
func (*NRetrievalReq) Descriptor() ([]byte, []int) {
	return file_proto_dfs_proto_rawDescGZIP(), []int{20}
}

func (x *NRetrievalReq) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *NRetrievalReq) GetChunkname() string {
	if x != nil {
		return x.Chunkname
	}
	return ""
}

func (x *NRetrievalReq) GetChecksum() bool {
	if x != nil {
		return x.Checksum
	}
	return false
}

type ListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ls bool `protobuf:"varint,1,opt,name=ls,proto3" json:"ls,omitempty"`
}

func (x *ListReq) Reset() {
	*x = ListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dfs_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListReq) ProtoMessage() {}

func (x *ListReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dfs_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListReq.ProtoReflect.Descriptor instead.
func (*ListReq) Descriptor() ([]byte, []int) {
	return file_proto_dfs_proto_rawDescGZIP(), []int{21}
}

func (x *ListReq) GetLs() bool {
	if x != nil {
		return x.Ls
	}
	return false
}

type NodesReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nodes bool `protobuf:"varint,1,opt,name=nodes,proto3" json:"nodes,omitempty"`
}

func (x *NodesReq) Reset() {
	*x = NodesReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dfs_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodesReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodesReq) ProtoMessage() {}

func (x *NodesReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dfs_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodesReq.ProtoReflect.Descriptor instead.
func (*NodesReq) Descriptor() ([]byte, []int) {
	return file_proto_dfs_proto_rawDescGZIP(), []int{22}
}

func (x *NodesReq) GetNodes() bool {
	if x != nil {
		return x.Nodes
	}
	return false
}

type DeleteReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filename string `protobuf:"bytes,1,opt,name=filename,proto3" json:"filename,omitempty"`
}

func (x *DeleteReq) Reset() {
	*x = DeleteReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dfs_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteReq) ProtoMessage() {}

func (x *DeleteReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dfs_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteReq.ProtoReflect.Descriptor instead.
func (*DeleteReq) Descriptor() ([]byte, []int) {
	return file_proto_dfs_proto_rawDescGZIP(), []int{23}
}

func (x *DeleteReq) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

// ------------ Checksum messages ------------
type Checksum struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Md5 []byte `protobuf:"bytes,1,opt,name=md5,proto3" json:"md5,omitempty"`
}

func (x *Checksum) Reset() {
	*x = Checksum{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dfs_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Checksum) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Checksum) ProtoMessage() {}

func (x *Checksum) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dfs_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Checksum.ProtoReflect.Descriptor instead.
func (*Checksum) Descriptor() ([]byte, []int) {
	return file_proto_dfs_proto_rawDescGZIP(), []int{24}
}

func (x *Checksum) GetMd5() []byte {
	if x != nil {
		return x.Md5
	}
	return nil
}

type ChecksumRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ok      bool   `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *ChecksumRes) Reset() {
	*x = ChecksumRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dfs_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChecksumRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChecksumRes) ProtoMessage() {}

func (x *ChecksumRes) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dfs_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChecksumRes.ProtoReflect.Descriptor instead.
func (*ChecksumRes) Descriptor() ([]byte, []int) {
	return file_proto_dfs_proto_rawDescGZIP(), []int{25}
}

func (x *ChecksumRes) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

func (x *ChecksumRes) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type Wrapper struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Msg:
	//	*Wrapper_JoinRes
	//	*Wrapper_KillNode
	//	*Wrapper_CStorageRes
	//	*Wrapper_CRetrievalRes
	//	*Wrapper_ReplicaOrder
	//	*Wrapper_ReplicaRes
	//	*Wrapper_ListRes
	//	*Wrapper_NodesRes
	//	*Wrapper_DeleteRes
	//	*Wrapper_JoinReq
	//	*Wrapper_Heartbeat
	//	*Wrapper_NStorageRes
	//	*Wrapper_NRetrievalRes
	//	*Wrapper_OrderRes
	//	*Wrapper_ReplicaReq
	//	*Wrapper_CStorageReq
	//	*Wrapper_NStorageReq
	//	*Wrapper_CRetrievalReq
	//	*Wrapper_NRetrievalReq
	//	*Wrapper_ListReq
	//	*Wrapper_NodesReq
	//	*Wrapper_DeleteReq
	//	*Wrapper_Md5
	//	*Wrapper_ChecksumRes
	Msg isWrapper_Msg `protobuf_oneof:"msg"`
}

func (x *Wrapper) Reset() {
	*x = Wrapper{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dfs_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Wrapper) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Wrapper) ProtoMessage() {}

func (x *Wrapper) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dfs_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Wrapper.ProtoReflect.Descriptor instead.
func (*Wrapper) Descriptor() ([]byte, []int) {
	return file_proto_dfs_proto_rawDescGZIP(), []int{26}
}

func (m *Wrapper) GetMsg() isWrapper_Msg {
	if m != nil {
		return m.Msg
	}
	return nil
}

func (x *Wrapper) GetJoinRes() *JoinRes {
	if x, ok := x.GetMsg().(*Wrapper_JoinRes); ok {
		return x.JoinRes
	}
	return nil
}

func (x *Wrapper) GetKillNode() *KillNode {
	if x, ok := x.GetMsg().(*Wrapper_KillNode); ok {
		return x.KillNode
	}
	return nil
}

func (x *Wrapper) GetCStorageRes() *CStorageRes {
	if x, ok := x.GetMsg().(*Wrapper_CStorageRes); ok {
		return x.CStorageRes
	}
	return nil
}

func (x *Wrapper) GetCRetrievalRes() *CRetrievalRes {
	if x, ok := x.GetMsg().(*Wrapper_CRetrievalRes); ok {
		return x.CRetrievalRes
	}
	return nil
}

func (x *Wrapper) GetReplicaOrder() *ReplicaOrder {
	if x, ok := x.GetMsg().(*Wrapper_ReplicaOrder); ok {
		return x.ReplicaOrder
	}
	return nil
}

func (x *Wrapper) GetReplicaRes() *ReplicaRes {
	if x, ok := x.GetMsg().(*Wrapper_ReplicaRes); ok {
		return x.ReplicaRes
	}
	return nil
}

func (x *Wrapper) GetListRes() *ListRes {
	if x, ok := x.GetMsg().(*Wrapper_ListRes); ok {
		return x.ListRes
	}
	return nil
}

func (x *Wrapper) GetNodesRes() *NodesRes {
	if x, ok := x.GetMsg().(*Wrapper_NodesRes); ok {
		return x.NodesRes
	}
	return nil
}

func (x *Wrapper) GetDeleteRes() *DeleteRes {
	if x, ok := x.GetMsg().(*Wrapper_DeleteRes); ok {
		return x.DeleteRes
	}
	return nil
}

func (x *Wrapper) GetJoinReq() *JoinReq {
	if x, ok := x.GetMsg().(*Wrapper_JoinReq); ok {
		return x.JoinReq
	}
	return nil
}

func (x *Wrapper) GetHeartbeat() *Heartbeat {
	if x, ok := x.GetMsg().(*Wrapper_Heartbeat); ok {
		return x.Heartbeat
	}
	return nil
}

func (x *Wrapper) GetNStorageRes() *NStorageRes {
	if x, ok := x.GetMsg().(*Wrapper_NStorageRes); ok {
		return x.NStorageRes
	}
	return nil
}

func (x *Wrapper) GetNRetrievalRes() *NRetrievalRes {
	if x, ok := x.GetMsg().(*Wrapper_NRetrievalRes); ok {
		return x.NRetrievalRes
	}
	return nil
}

func (x *Wrapper) GetOrderRes() *OrderRes {
	if x, ok := x.GetMsg().(*Wrapper_OrderRes); ok {
		return x.OrderRes
	}
	return nil
}

func (x *Wrapper) GetReplicaReq() *ReplicaReq {
	if x, ok := x.GetMsg().(*Wrapper_ReplicaReq); ok {
		return x.ReplicaReq
	}
	return nil
}

func (x *Wrapper) GetCStorageReq() *CStorageReq {
	if x, ok := x.GetMsg().(*Wrapper_CStorageReq); ok {
		return x.CStorageReq
	}
	return nil
}

func (x *Wrapper) GetNStorageReq() *NStorageReq {
	if x, ok := x.GetMsg().(*Wrapper_NStorageReq); ok {
		return x.NStorageReq
	}
	return nil
}

func (x *Wrapper) GetCRetrievalReq() *CRetrievalReq {
	if x, ok := x.GetMsg().(*Wrapper_CRetrievalReq); ok {
		return x.CRetrievalReq
	}
	return nil
}

func (x *Wrapper) GetNRetrievalReq() *NRetrievalReq {
	if x, ok := x.GetMsg().(*Wrapper_NRetrievalReq); ok {
		return x.NRetrievalReq
	}
	return nil
}

func (x *Wrapper) GetListReq() *ListReq {
	if x, ok := x.GetMsg().(*Wrapper_ListReq); ok {
		return x.ListReq
	}
	return nil
}

func (x *Wrapper) GetNodesReq() *NodesReq {
	if x, ok := x.GetMsg().(*Wrapper_NodesReq); ok {
		return x.NodesReq
	}
	return nil
}

func (x *Wrapper) GetDeleteReq() *DeleteReq {
	if x, ok := x.GetMsg().(*Wrapper_DeleteReq); ok {
		return x.DeleteReq
	}
	return nil
}

func (x *Wrapper) GetMd5() *Checksum {
	if x, ok := x.GetMsg().(*Wrapper_Md5); ok {
		return x.Md5
	}
	return nil
}

func (x *Wrapper) GetChecksumRes() *ChecksumRes {
	if x, ok := x.GetMsg().(*Wrapper_ChecksumRes); ok {
		return x.ChecksumRes
	}
	return nil
}

type isWrapper_Msg interface {
	isWrapper_Msg()
}

type Wrapper_JoinRes struct {
	JoinRes *JoinRes `protobuf:"bytes,1,opt,name=join_res,json=joinRes,proto3,oneof"`
}

type Wrapper_KillNode struct {
	KillNode *KillNode `protobuf:"bytes,2,opt,name=kill_node,json=killNode,proto3,oneof"`
}

type Wrapper_CStorageRes struct {
	CStorageRes *CStorageRes `protobuf:"bytes,3,opt,name=c_storage_res,json=cStorageRes,proto3,oneof"`
}

type Wrapper_CRetrievalRes struct {
	CRetrievalRes *CRetrievalRes `protobuf:"bytes,4,opt,name=c_retrieval_res,json=cRetrievalRes,proto3,oneof"`
}

type Wrapper_ReplicaOrder struct {
	ReplicaOrder *ReplicaOrder `protobuf:"bytes,5,opt,name=replica_order,json=replicaOrder,proto3,oneof"`
}

type Wrapper_ReplicaRes struct {
	ReplicaRes *ReplicaRes `protobuf:"bytes,6,opt,name=replica_res,json=replicaRes,proto3,oneof"`
}

type Wrapper_ListRes struct {
	ListRes *ListRes `protobuf:"bytes,7,opt,name=list_res,json=listRes,proto3,oneof"`
}

type Wrapper_NodesRes struct {
	NodesRes *NodesRes `protobuf:"bytes,8,opt,name=nodes_res,json=nodesRes,proto3,oneof"`
}

type Wrapper_DeleteRes struct {
	DeleteRes *DeleteRes `protobuf:"bytes,9,opt,name=delete_res,json=deleteRes,proto3,oneof"`
}

type Wrapper_JoinReq struct {
	JoinReq *JoinReq `protobuf:"bytes,10,opt,name=join_req,json=joinReq,proto3,oneof"`
}

type Wrapper_Heartbeat struct {
	Heartbeat *Heartbeat `protobuf:"bytes,11,opt,name=heartbeat,proto3,oneof"`
}

type Wrapper_NStorageRes struct {
	NStorageRes *NStorageRes `protobuf:"bytes,12,opt,name=n_storage_res,json=nStorageRes,proto3,oneof"`
}

type Wrapper_NRetrievalRes struct {
	NRetrievalRes *NRetrievalRes `protobuf:"bytes,13,opt,name=n_retrieval_res,json=nRetrievalRes,proto3,oneof"`
}

type Wrapper_OrderRes struct {
	OrderRes *OrderRes `protobuf:"bytes,14,opt,name=order_res,json=orderRes,proto3,oneof"`
}

type Wrapper_ReplicaReq struct {
	ReplicaReq *ReplicaReq `protobuf:"bytes,15,opt,name=replica_req,json=replicaReq,proto3,oneof"`
}

type Wrapper_CStorageReq struct {
	CStorageReq *CStorageReq `protobuf:"bytes,16,opt,name=c_storage_req,json=cStorageReq,proto3,oneof"`
}

type Wrapper_NStorageReq struct {
	NStorageReq *NStorageReq `protobuf:"bytes,17,opt,name=n_storage_req,json=nStorageReq,proto3,oneof"`
}

type Wrapper_CRetrievalReq struct {
	CRetrievalReq *CRetrievalReq `protobuf:"bytes,18,opt,name=c_retrieval_req,json=cRetrievalReq,proto3,oneof"`
}

type Wrapper_NRetrievalReq struct {
	NRetrievalReq *NRetrievalReq `protobuf:"bytes,19,opt,name=n_retrieval_req,json=nRetrievalReq,proto3,oneof"`
}

type Wrapper_ListReq struct {
	ListReq *ListReq `protobuf:"bytes,20,opt,name=list_req,json=listReq,proto3,oneof"`
}

type Wrapper_NodesReq struct {
	NodesReq *NodesReq `protobuf:"bytes,21,opt,name=nodes_req,json=nodesReq,proto3,oneof"`
}

type Wrapper_DeleteReq struct {
	DeleteReq *DeleteReq `protobuf:"bytes,22,opt,name=delete_req,json=deleteReq,proto3,oneof"`
}

type Wrapper_Md5 struct {
	Md5 *Checksum `protobuf:"bytes,23,opt,name=md5,proto3,oneof"`
}

type Wrapper_ChecksumRes struct {
	ChecksumRes *ChecksumRes `protobuf:"bytes,24,opt,name=checksum_res,json=checksumRes,proto3,oneof"`
}

func (*Wrapper_JoinRes) isWrapper_Msg() {}

func (*Wrapper_KillNode) isWrapper_Msg() {}

func (*Wrapper_CStorageRes) isWrapper_Msg() {}

func (*Wrapper_CRetrievalRes) isWrapper_Msg() {}

func (*Wrapper_ReplicaOrder) isWrapper_Msg() {}

func (*Wrapper_ReplicaRes) isWrapper_Msg() {}

func (*Wrapper_ListRes) isWrapper_Msg() {}

func (*Wrapper_NodesRes) isWrapper_Msg() {}

func (*Wrapper_DeleteRes) isWrapper_Msg() {}

func (*Wrapper_JoinReq) isWrapper_Msg() {}

func (*Wrapper_Heartbeat) isWrapper_Msg() {}

func (*Wrapper_NStorageRes) isWrapper_Msg() {}

func (*Wrapper_NRetrievalRes) isWrapper_Msg() {}

func (*Wrapper_OrderRes) isWrapper_Msg() {}

func (*Wrapper_ReplicaReq) isWrapper_Msg() {}

func (*Wrapper_CStorageReq) isWrapper_Msg() {}

func (*Wrapper_NStorageReq) isWrapper_Msg() {}

func (*Wrapper_CRetrievalReq) isWrapper_Msg() {}

func (*Wrapper_NRetrievalReq) isWrapper_Msg() {}

func (*Wrapper_ListReq) isWrapper_Msg() {}

func (*Wrapper_NodesReq) isWrapper_Msg() {}

func (*Wrapper_DeleteReq) isWrapper_Msg() {}

func (*Wrapper_Md5) isWrapper_Msg() {}

func (*Wrapper_ChecksumRes) isWrapper_Msg() {}

var File_proto_dfs_proto protoreflect.FileDescriptor

var file_proto_dfs_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x64, 0x66, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x3a, 0x0a, 0x07, 0x4a, 0x6f, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06,
	0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x61, 0x63,
	0x63, 0x65, 0x70, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x22, 0x1e, 0x0a,
	0x08, 0x4b, 0x69, 0x6c, 0x6c, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6b, 0x69, 0x6c,
	0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x6b, 0x69, 0x6c, 0x6c, 0x22, 0x20, 0x0a,
	0x08, 0x4e, 0x6f, 0x64, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x64,
	0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x22,
	0xd4, 0x02, 0x0a, 0x0b, 0x43, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x12,
	0x0e, 0x0a, 0x02, 0x6f, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02, 0x6f, 0x6b, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x64,
	0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x12,
	0x37, 0x0a, 0x09, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x5f, 0x6d, 0x61, 0x70, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x43, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73,
	0x2e, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08,
	0x63, 0x68, 0x75, 0x6e, 0x6b, 0x4d, 0x61, 0x70, 0x12, 0x43, 0x0a, 0x0d, 0x72, 0x65, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1e, 0x2e, 0x43, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x2e, 0x52, 0x65,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x0c, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x1a, 0x3b, 0x0a,
	0x0d, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x4a, 0x0a, 0x11, 0x52, 0x65,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x1f, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x09, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xe2, 0x01, 0x0a, 0x0d, 0x43, 0x52, 0x65, 0x74, 0x72,
	0x69, 0x65, 0x76, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x6b, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x02, 0x6f, 0x6b, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x75, 0x6d, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x6e, 0x75, 0x6d, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x73,
	0x12, 0x3f, 0x0a, 0x0b, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x73, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x43, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76,
	0x61, 0x6c, 0x52, 0x65, 0x73, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0a, 0x6e, 0x6f, 0x64, 0x65, 0x43, 0x68, 0x75, 0x6e, 0x6b,
	0x73, 0x1a, 0x48, 0x0a, 0x0f, 0x4e, 0x6f, 0x64, 0x65, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x1f, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x8b, 0x01, 0x0a, 0x0c,
	0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08,
	0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x68, 0x75, 0x6e,
	0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x75,
	0x6e, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x73,
	0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x68, 0x75, 0x6e, 0x6b,
	0x73, 0x69, 0x7a, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x5f,
	0x6e, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x22, 0x52, 0x0a, 0x0a, 0x52, 0x65, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x52, 0x65, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x6b, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x02, 0x6f, 0x6b, 0x12, 0x17, 0x0a, 0x07, 0x6e, 0x6f, 0x64, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64,
	0x12, 0x1b, 0x0a, 0x09, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x6f, 0x64, 0x65, 0x41, 0x64, 0x64, 0x72, 0x22, 0x27, 0x0a,
	0x07, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65,
	0x6e, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x66, 0x69, 0x6c,
	0x65, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x22, 0x9c, 0x01, 0x0a, 0x08, 0x4e, 0x6f, 0x64, 0x65, 0x73,
	0x52, 0x65, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x69, 0x73, 0x6b, 0x5f, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x64, 0x69, 0x73, 0x6b, 0x53, 0x70, 0x61,
	0x63, 0x65, 0x12, 0x34, 0x0a, 0x09, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x72, 0x65, 0x71, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x52, 0x65, 0x73,
	0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08,
	0x6e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x73, 0x1a, 0x3b, 0x0a, 0x0d, 0x4e, 0x6f, 0x64, 0x65,
	0x52, 0x65, 0x71, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x35, 0x0a, 0x09, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52,
	0x65, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02,
	0x6f, 0x6b, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x45, 0x0a, 0x07,
	0x4a, 0x6f, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x1b, 0x0a, 0x09, 0x6e, 0x6f, 0x64, 0x65, 0x5f,
	0x61, 0x64, 0x64, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x6f, 0x64, 0x65,
	0x41, 0x64, 0x64, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x69, 0x73, 0x6b, 0x5f, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x64, 0x69, 0x73, 0x6b, 0x53, 0x70,
	0x61, 0x63, 0x65, 0x22, 0x23, 0x0a, 0x09, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x06, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x73, 0x22, 0xe3, 0x01, 0x0a, 0x09, 0x48, 0x65, 0x61,
	0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x12,
	0x1d, 0x0a, 0x0a, 0x64, 0x69, 0x73, 0x6b, 0x5f, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x09, 0x64, 0x69, 0x73, 0x6b, 0x53, 0x70, 0x61, 0x63, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x12, 0x38, 0x0a, 0x0a, 0x6e, 0x65,
	0x77, 0x5f, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x2e, 0x4e, 0x65, 0x77, 0x43, 0x68,
	0x75, 0x6e, 0x6b, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x09, 0x6e, 0x65, 0x77, 0x43, 0x68,
	0x75, 0x6e, 0x6b, 0x73, 0x1a, 0x48, 0x0a, 0x0e, 0x4e, 0x65, 0x77, 0x43, 0x68, 0x75, 0x6e, 0x6b,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x20, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x37,
	0x0a, 0x0b, 0x4e, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x12, 0x0e, 0x0a,
	0x02, 0x6f, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02, 0x6f, 0x6b, 0x12, 0x18, 0x0a,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x58, 0x0a, 0x0d, 0x4e, 0x52, 0x65, 0x74, 0x72,
	0x69, 0x65, 0x76, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x6b, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x02, 0x6f, 0x6b, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x5f, 0x73, 0x69, 0x7a, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x53, 0x69, 0x7a,
	0x65, 0x22, 0x34, 0x0a, 0x08, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x12, 0x0e, 0x0a,
	0x02, 0x6f, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02, 0x6f, 0x6b, 0x12, 0x18, 0x0a,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x5f, 0x0a, 0x0a, 0x52, 0x65, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x12, 0x1a,
	0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x68,
	0x75, 0x6e, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63,
	0x68, 0x75, 0x6e, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0xc3, 0x01, 0x0a, 0x0b, 0x43, 0x53, 0x74,
	0x6f, 0x72, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x69, 0x7a, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x69, 0x7a, 0x65,
	0x12, 0x3d, 0x0a, 0x0b, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x43, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65,
	0x52, 0x65, 0x71, 0x2e, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x53, 0x69, 0x7a, 0x65, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x0a, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x53, 0x69, 0x7a, 0x65, 0x73, 0x1a,
	0x3d, 0x0a, 0x0f, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x53, 0x69, 0x7a, 0x65, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x8a,
	0x01, 0x0a, 0x0b, 0x4e, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x12, 0x1a,
	0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x68,
	0x75, 0x6e, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63,
	0x68, 0x75, 0x6e, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x68, 0x75, 0x6e,
	0x6b, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x68, 0x75,
	0x6e, 0x6b, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x72,
	0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x22, 0x2b, 0x0a, 0x0d, 0x43,
	0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08,
	0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x65, 0x0a, 0x0d, 0x4e, 0x52, 0x65, 0x74,
	0x72, 0x69, 0x65, 0x76, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c,
	0x65, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c,
	0x65, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x75, 0x6d, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x75, 0x6d, 0x22,
	0x19, 0x0a, 0x07, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x6c, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02, 0x6c, 0x73, 0x22, 0x20, 0x0a, 0x08, 0x4e, 0x6f,
	0x64, 0x65, 0x73, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x22, 0x27, 0x0a, 0x09,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c,
	0x65, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c,
	0x65, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x1c, 0x0a, 0x08, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x75,
	0x6d, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x64, 0x35, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03,
	0x6d, 0x64, 0x35, 0x22, 0x37, 0x0a, 0x0b, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x75, 0x6d, 0x52,
	0x65, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02,
	0x6f, 0x6b, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xfa, 0x08, 0x0a,
	0x07, 0x57, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x12, 0x25, 0x0a, 0x08, 0x6a, 0x6f, 0x69, 0x6e,
	0x5f, 0x72, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x4a, 0x6f, 0x69,
	0x6e, 0x52, 0x65, 0x73, 0x48, 0x00, 0x52, 0x07, 0x6a, 0x6f, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x12,
	0x28, 0x0a, 0x09, 0x6b, 0x69, 0x6c, 0x6c, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x09, 0x2e, 0x4b, 0x69, 0x6c, 0x6c, 0x4e, 0x6f, 0x64, 0x65, 0x48, 0x00, 0x52,
	0x08, 0x6b, 0x69, 0x6c, 0x6c, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x32, 0x0a, 0x0d, 0x63, 0x5f, 0x73,
	0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0c, 0x2e, 0x43, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x48, 0x00,
	0x52, 0x0b, 0x63, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x12, 0x38, 0x0a,
	0x0f, 0x63, 0x5f, 0x72, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x61, 0x6c, 0x5f, 0x72, 0x65, 0x73,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x43, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65,
	0x76, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x48, 0x00, 0x52, 0x0d, 0x63, 0x52, 0x65, 0x74, 0x72, 0x69,
	0x65, 0x76, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x12, 0x34, 0x0a, 0x0d, 0x72, 0x65, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d,
	0x2e, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x48, 0x00, 0x52,
	0x0c, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x2e, 0x0a,
	0x0b, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x5f, 0x72, 0x65, 0x73, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x52, 0x65, 0x73, 0x48,
	0x00, 0x52, 0x0a, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x52, 0x65, 0x73, 0x12, 0x25, 0x0a,
	0x08, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x08, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x48, 0x00, 0x52, 0x07, 0x6c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x12, 0x28, 0x0a, 0x09, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x5f, 0x72, 0x65,
	0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x52,
	0x65, 0x73, 0x48, 0x00, 0x52, 0x08, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x52, 0x65, 0x73, 0x12, 0x2b,
	0x0a, 0x0a, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x48, 0x00,
	0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x12, 0x25, 0x0a, 0x08, 0x6a,
	0x6f, 0x69, 0x6e, 0x5f, 0x72, 0x65, 0x71, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e,
	0x4a, 0x6f, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x07, 0x6a, 0x6f, 0x69, 0x6e, 0x52,
	0x65, 0x71, 0x12, 0x2a, 0x0a, 0x09, 0x68, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61,
	0x74, 0x48, 0x00, 0x52, 0x09, 0x68, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x12, 0x32,
	0x0a, 0x0d, 0x6e, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x4e, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65,
	0x52, 0x65, 0x73, 0x48, 0x00, 0x52, 0x0b, 0x6e, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x52,
	0x65, 0x73, 0x12, 0x38, 0x0a, 0x0f, 0x6e, 0x5f, 0x72, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x61,
	0x6c, 0x5f, 0x72, 0x65, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x4e, 0x52,
	0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x48, 0x00, 0x52, 0x0d, 0x6e,
	0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x12, 0x28, 0x0a, 0x09,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x73, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x09, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x48, 0x00, 0x52, 0x08, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x12, 0x2e, 0x0a, 0x0b, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x5f, 0x72, 0x65, 0x71, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x52, 0x65,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x0a, 0x72, 0x65, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x52, 0x65, 0x71, 0x12, 0x32, 0x0a, 0x0d, 0x63, 0x5f, 0x73, 0x74, 0x6f, 0x72,
	0x61, 0x67, 0x65, 0x5f, 0x72, 0x65, 0x71, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e,
	0x43, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x0b, 0x63,
	0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x12, 0x32, 0x0a, 0x0d, 0x6e, 0x5f,
	0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x72, 0x65, 0x71, 0x18, 0x11, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0c, 0x2e, 0x4e, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x48,
	0x00, 0x52, 0x0b, 0x6e, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x12, 0x38,
	0x0a, 0x0f, 0x63, 0x5f, 0x72, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x61, 0x6c, 0x5f, 0x72, 0x65,
	0x71, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x43, 0x52, 0x65, 0x74, 0x72, 0x69,
	0x65, 0x76, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x0d, 0x63, 0x52, 0x65, 0x74, 0x72,
	0x69, 0x65, 0x76, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x38, 0x0a, 0x0f, 0x6e, 0x5f, 0x72, 0x65,
	0x74, 0x72, 0x69, 0x65, 0x76, 0x61, 0x6c, 0x5f, 0x72, 0x65, 0x71, 0x18, 0x13, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0e, 0x2e, 0x4e, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x61, 0x6c, 0x52, 0x65,
	0x71, 0x48, 0x00, 0x52, 0x0d, 0x6e, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x61, 0x6c, 0x52,
	0x65, 0x71, 0x12, 0x25, 0x0a, 0x08, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x71, 0x18, 0x14,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x48, 0x00,
	0x52, 0x07, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x28, 0x0a, 0x09, 0x6e, 0x6f, 0x64,
	0x65, 0x73, 0x5f, 0x72, 0x65, 0x71, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x4e,
	0x6f, 0x64, 0x65, 0x73, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x08, 0x6e, 0x6f, 0x64, 0x65, 0x73,
	0x52, 0x65, 0x71, 0x12, 0x2b, 0x0a, 0x0a, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x5f, 0x72, 0x65,
	0x71, 0x18, 0x16, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x12, 0x1d, 0x0a, 0x03, 0x6d, 0x64, 0x35, 0x18, 0x17, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x75, 0x6d, 0x48, 0x00, 0x52, 0x03, 0x6d, 0x64, 0x35, 0x12,
	0x31, 0x0a, 0x0c, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x75, 0x6d, 0x5f, 0x72, 0x65, 0x73, 0x18,
	0x18, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x75, 0x6d,
	0x52, 0x65, 0x73, 0x48, 0x00, 0x52, 0x0b, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x75, 0x6d, 0x52,
	0x65, 0x73, 0x42, 0x05, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x42, 0x0c, 0x5a, 0x0a, 0x2e, 0x2f, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_dfs_proto_rawDescOnce sync.Once
	file_proto_dfs_proto_rawDescData = file_proto_dfs_proto_rawDesc
)

func file_proto_dfs_proto_rawDescGZIP() []byte {
	file_proto_dfs_proto_rawDescOnce.Do(func() {
		file_proto_dfs_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_dfs_proto_rawDescData)
	})
	return file_proto_dfs_proto_rawDescData
}

var file_proto_dfs_proto_msgTypes = make([]protoimpl.MessageInfo, 33)
var file_proto_dfs_proto_goTypes = []interface{}{
	(*JoinRes)(nil),       // 0: JoinRes
	(*KillNode)(nil),      // 1: KillNode
	(*NodeList)(nil),      // 2: NodeList
	(*CStorageRes)(nil),   // 3: CStorageRes
	(*CRetrievalRes)(nil), // 4: CRetrievalRes
	(*ReplicaOrder)(nil),  // 5: ReplicaOrder
	(*ReplicaRes)(nil),    // 6: ReplicaRes
	(*ListRes)(nil),       // 7: ListRes
	(*NodesRes)(nil),      // 8: NodesRes
	(*DeleteRes)(nil),     // 9: DeleteRes
	(*JoinReq)(nil),       // 10: JoinReq
	(*ChunkList)(nil),     // 11: ChunkList
	(*Heartbeat)(nil),     // 12: Heartbeat
	(*NStorageRes)(nil),   // 13: NStorageRes
	(*NRetrievalRes)(nil), // 14: NRetrievalRes
	(*OrderRes)(nil),      // 15: OrderRes
	(*ReplicaReq)(nil),    // 16: ReplicaReq
	(*CStorageReq)(nil),   // 17: CStorageReq
	(*NStorageReq)(nil),   // 18: NStorageReq
	(*CRetrievalReq)(nil), // 19: CRetrievalReq
	(*NRetrievalReq)(nil), // 20: NRetrievalReq
	(*ListReq)(nil),       // 21: ListReq
	(*NodesReq)(nil),      // 22: NodesReq
	(*DeleteReq)(nil),     // 23: DeleteReq
	(*Checksum)(nil),      // 24: Checksum
	(*ChecksumRes)(nil),   // 25: ChecksumRes
	(*Wrapper)(nil),       // 26: Wrapper
	nil,                   // 27: CStorageRes.ChunkMapEntry
	nil,                   // 28: CStorageRes.ReplicaNodesEntry
	nil,                   // 29: CRetrievalRes.NodeChunksEntry
	nil,                   // 30: NodesRes.NodeReqsEntry
	nil,                   // 31: Heartbeat.NewChunksEntry
	nil,                   // 32: CStorageReq.ChunkSizesEntry
}
var file_proto_dfs_proto_depIdxs = []int32{
	27, // 0: CStorageRes.chunk_map:type_name -> CStorageRes.ChunkMapEntry
	28, // 1: CStorageRes.replica_nodes:type_name -> CStorageRes.ReplicaNodesEntry
	29, // 2: CRetrievalRes.node_chunks:type_name -> CRetrievalRes.NodeChunksEntry
	30, // 3: NodesRes.node_reqs:type_name -> NodesRes.NodeReqsEntry
	31, // 4: Heartbeat.new_chunks:type_name -> Heartbeat.NewChunksEntry
	32, // 5: CStorageReq.chunk_sizes:type_name -> CStorageReq.ChunkSizesEntry
	0,  // 6: Wrapper.join_res:type_name -> JoinRes
	1,  // 7: Wrapper.kill_node:type_name -> KillNode
	3,  // 8: Wrapper.c_storage_res:type_name -> CStorageRes
	4,  // 9: Wrapper.c_retrieval_res:type_name -> CRetrievalRes
	5,  // 10: Wrapper.replica_order:type_name -> ReplicaOrder
	6,  // 11: Wrapper.replica_res:type_name -> ReplicaRes
	7,  // 12: Wrapper.list_res:type_name -> ListRes
	8,  // 13: Wrapper.nodes_res:type_name -> NodesRes
	9,  // 14: Wrapper.delete_res:type_name -> DeleteRes
	10, // 15: Wrapper.join_req:type_name -> JoinReq
	12, // 16: Wrapper.heartbeat:type_name -> Heartbeat
	13, // 17: Wrapper.n_storage_res:type_name -> NStorageRes
	14, // 18: Wrapper.n_retrieval_res:type_name -> NRetrievalRes
	15, // 19: Wrapper.order_res:type_name -> OrderRes
	16, // 20: Wrapper.replica_req:type_name -> ReplicaReq
	17, // 21: Wrapper.c_storage_req:type_name -> CStorageReq
	18, // 22: Wrapper.n_storage_req:type_name -> NStorageReq
	19, // 23: Wrapper.c_retrieval_req:type_name -> CRetrievalReq
	20, // 24: Wrapper.n_retrieval_req:type_name -> NRetrievalReq
	21, // 25: Wrapper.list_req:type_name -> ListReq
	22, // 26: Wrapper.nodes_req:type_name -> NodesReq
	23, // 27: Wrapper.delete_req:type_name -> DeleteReq
	24, // 28: Wrapper.md5:type_name -> Checksum
	25, // 29: Wrapper.checksum_res:type_name -> ChecksumRes
	2,  // 30: CStorageRes.ReplicaNodesEntry.value:type_name -> NodeList
	2,  // 31: CRetrievalRes.NodeChunksEntry.value:type_name -> NodeList
	11, // 32: Heartbeat.NewChunksEntry.value:type_name -> ChunkList
	33, // [33:33] is the sub-list for method output_type
	33, // [33:33] is the sub-list for method input_type
	33, // [33:33] is the sub-list for extension type_name
	33, // [33:33] is the sub-list for extension extendee
	0,  // [0:33] is the sub-list for field type_name
}

func init() { file_proto_dfs_proto_init() }
func file_proto_dfs_proto_init() {
	if File_proto_dfs_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_dfs_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JoinRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dfs_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KillNode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dfs_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodeList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dfs_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CStorageRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dfs_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CRetrievalRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dfs_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReplicaOrder); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dfs_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReplicaRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dfs_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dfs_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodesRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dfs_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dfs_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JoinReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dfs_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChunkList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dfs_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Heartbeat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dfs_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NStorageRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dfs_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NRetrievalRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dfs_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dfs_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReplicaReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dfs_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CStorageReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dfs_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NStorageReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dfs_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CRetrievalReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dfs_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NRetrievalReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dfs_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dfs_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodesReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dfs_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dfs_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Checksum); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dfs_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChecksumRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dfs_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Wrapper); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_proto_dfs_proto_msgTypes[26].OneofWrappers = []interface{}{
		(*Wrapper_JoinRes)(nil),
		(*Wrapper_KillNode)(nil),
		(*Wrapper_CStorageRes)(nil),
		(*Wrapper_CRetrievalRes)(nil),
		(*Wrapper_ReplicaOrder)(nil),
		(*Wrapper_ReplicaRes)(nil),
		(*Wrapper_ListRes)(nil),
		(*Wrapper_NodesRes)(nil),
		(*Wrapper_DeleteRes)(nil),
		(*Wrapper_JoinReq)(nil),
		(*Wrapper_Heartbeat)(nil),
		(*Wrapper_NStorageRes)(nil),
		(*Wrapper_NRetrievalRes)(nil),
		(*Wrapper_OrderRes)(nil),
		(*Wrapper_ReplicaReq)(nil),
		(*Wrapper_CStorageReq)(nil),
		(*Wrapper_NStorageReq)(nil),
		(*Wrapper_CRetrievalReq)(nil),
		(*Wrapper_NRetrievalReq)(nil),
		(*Wrapper_ListReq)(nil),
		(*Wrapper_NodesReq)(nil),
		(*Wrapper_DeleteReq)(nil),
		(*Wrapper_Md5)(nil),
		(*Wrapper_ChecksumRes)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_dfs_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   33,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_dfs_proto_goTypes,
		DependencyIndexes: file_proto_dfs_proto_depIdxs,
		MessageInfos:      file_proto_dfs_proto_msgTypes,
	}.Build()
	File_proto_dfs_proto = out.File
	file_proto_dfs_proto_rawDesc = nil
	file_proto_dfs_proto_goTypes = nil
	file_proto_dfs_proto_depIdxs = nil
}
